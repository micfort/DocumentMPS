package Document.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDocument = createDescriptorForDocument();
  /*package*/ final ConceptDescriptor myConceptIContentItem = createDescriptorForIContentItem();
  /*package*/ final ConceptDescriptor myConceptIHasSubContent = createDescriptorForIHasSubContent();
  /*package*/ final ConceptDescriptor myConceptIHeaderItem = createDescriptorForIHeaderItem();
  /*package*/ final ConceptDescriptor myConceptRawLatex = createDescriptorForRawLatex();
  /*package*/ final ConceptDescriptor myConceptRawLatexLine = createDescriptorForRawLatexLine();
  /*package*/ final ConceptDescriptor myConceptRawLatexWord = createDescriptorForRawLatexWord();
  /*package*/ final ConceptDescriptor myConceptRawLatexWords = createDescriptorForRawLatexWords();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDocument, myConceptIContentItem, myConceptIHasSubContent, myConceptIHeaderItem, myConceptRawLatex, myConceptRawLatexLine, myConceptRawLatexWord, myConceptRawLatexWords);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Document:
        return myConceptDocument;
      case LanguageConceptSwitch.IContentItem:
        return myConceptIContentItem;
      case LanguageConceptSwitch.IHasSubContent:
        return myConceptIHasSubContent;
      case LanguageConceptSwitch.IHeaderItem:
        return myConceptIHeaderItem;
      case LanguageConceptSwitch.RawLatex:
        return myConceptRawLatex;
      case LanguageConceptSwitch.RawLatexLine:
        return myConceptRawLatexLine;
      case LanguageConceptSwitch.RawLatexWord:
        return myConceptRawLatexWord;
      case LanguageConceptSwitch.RawLatexWords:
        return myConceptRawLatexWords;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDocument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "Document", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f82467L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f8246bL);
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/1132657956328318055");
    b.version(2);
    b.prop("OutputFile", 0xfb8026902fc0726L, "1132657956328572710");
    b.aggregate("headers", 0x2b10c2e2d38c41b9L).target(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d38c41b6L).optional(true).ordered(true).multiple(true).origin("3103194422725853625").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIContentItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "IContentItem", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f8246aL);
    b.interface_();
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/1132657956328318058");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIHasSubContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "IHasSubContent", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f8246bL);
    b.interface_();
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/1132657956328318059");
    b.version(2);
    b.aggregate("content", 0xfb8026902f824a2L).target(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f8246aL).optional(true).ordered(true).multiple(true).origin("1132657956328318114").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIHeaderItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "IHeaderItem", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d38c41b6L);
    b.interface_();
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/3103194422725853622");
    b.version(2);
    b.prop("priority", 0x2b10c2e2d38c41b7L, "3103194422725853623");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRawLatex() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "RawLatex", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d388fdd9L);
    b.class_(false, false, false);
    b.parent(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0xfb8026902f8246aL);
    b.parent(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d38c41b6L);
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/3103194422725639641");
    b.version(2);
    b.aggregate("lines", 0x2b10c2e2d388fddaL).target(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d3897aa7L).optional(false).ordered(true).multiple(true).origin("3103194422725639642").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRawLatexLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "RawLatexLine", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d3897aa7L);
    b.class_(false, false, false);
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/3103194422725671591");
    b.version(2);
    b.aggregate("words", 0x2b10c2e2d38f3df5L).target(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d38f3debL).optional(false).ordered(true).multiple(false).origin("3103194422726049269").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRawLatexWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "RawLatexWord", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d3897aa8L);
    b.class_(false, false, false);
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/3103194422725671592");
    b.version(2);
    b.prop("value", 0x2b10c2e2d3897aa9L, "3103194422725671593");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRawLatexWords() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Document", "RawLatexWords", 0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d38f3debL);
    b.class_(false, false, false);
    b.parent(0x92d2ea165a424fdfL, 0xa676c7604efe3504L, 0x237c8da86a9e7aecL);
    b.origin("r:217cb183-2c99-4254-a51b-ed431c0f427c(Document.structure)/3103194422726049259");
    b.version(2);
    b.aggregate("words", 0x2b10c2e2d38f3deeL).target(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L, 0x2b10c2e2d3897aa8L).optional(false).ordered(true).multiple(true).origin("3103194422726049262").done();
    return b.create();
  }
}
