package Document.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Document = 0;
  public static final int IContentItem = 1;
  public static final int IHasSubContent = 2;
  public static final int IHeaderItem = 3;
  public static final int RawLatex = 4;
  public static final int RawLatexLine = 5;
  public static final int RawLatexWord = 6;
  public static final int RawLatexWords = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe9a610efe9344ec5L, 0xaa3d44f7c7af41d2L);
    builder.put(0xfb8026902f82467L, Document);
    builder.put(0xfb8026902f8246aL, IContentItem);
    builder.put(0xfb8026902f8246bL, IHasSubContent);
    builder.put(0x2b10c2e2d38c41b6L, IHeaderItem);
    builder.put(0x2b10c2e2d388fdd9L, RawLatex);
    builder.put(0x2b10c2e2d3897aa7L, RawLatexLine);
    builder.put(0x2b10c2e2d3897aa8L, RawLatexWord);
    builder.put(0x2b10c2e2d38f3debL, RawLatexWords);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
